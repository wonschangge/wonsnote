一种混合应用开发方法、装置、终端设备及介质
================================================

技术效果（摘要）：

本申请实施例公开一种混合应用开发方法、装置、终端设备及介质，其中方法包括：
在系统原生层提供对系统接口和硬件接口的接口封装，并在中间层实现接口功能库，
支持在Web应用层直接使用底层接口，得到一个开发敏捷、人机友好的混合应用，
该混合应用融合了系统原生应用和Web应用在各自领域的优点。实施本申请实施例，
可高效地实现混合应用的开发，其中以流媒体应用为例，通过本实施例，可高效地实现
流媒体应用从Web面向原生的混合应用迁移，同时还可便捷增添文件读取保存、使用硬件
加速等系统和硬件接口功能。

解决问题（背景技术）：

目前在各类终端设备上主要运行着原生应用、Web应用和混合应用，混合应用是原生应用
和Web应用之间的桥梁、也是互相融合过渡的一种方式，广受当下终端设备主流应用开发
的喜爱。在混合应用的开发过程中，一般需要使用到大量系统接口和硬件接口。其中，
开发混合应用通常会使用原生项目开发或Linux基金会旗下的Cordova开源项目开发，
但它们在面对系统接口和硬件接口适配时，使用原生项目开发花费成本高昂、测试周期漫长，
而使用Cordova开源项目开发则必须引入外部接口插件，在安全性、可靠性、可调试性方面
保障力度低。通过上述内容可知，站在混合应用开发的角度上，实现一套快速、通用、安全
并直达底层的开发方法体系，成为一个急需解决的问题。

解决思路（具体实施方式第1段）：

一种混合应用的开发方法，该方法包括：在原生层实现一套以WebView和通信桥为核心的基础库，
其中WebView用于装载混合应用的Web部分的内容，通信桥用于承担WebView和Web内容的双向通信，
通信数据包括布尔、整形、长整形、浮点型、日期和对象，使用JSON数据格式传递。在中间层实现一套
使用通信桥的功能库，用于传递系统接口和硬件接口插件的执行结果、执行回调以及调试信息等内容。
在应用层实现系统接口和硬件接口的接口库，在和通信桥功能库连接后，可用于在应用端开发的便捷
调用和接口约束。
