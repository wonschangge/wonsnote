文件系统层次结构标准
===========================================================

* 版本： FHS_3.0

* 来源： https://refspecs.linuxfoundation.org/fhs.shtml

FHS的背景
-----------------------------------------------------------

开发标准文件系统层次结构的过程始于 1993 年 8 月，旨在重构 Linux 的文件和目录结构。 FSSTND是Linux操作系统特有的文件系统层次结构标准，于1994年2月14日发布。后续修订版分别于1994年10月9日和1995年3月28日发布。

1995 年初，在 BSD 开发社区成员的帮助下，开发更全面的 FSSTND 版本的目标不仅适用于 Linux，还适用于其他类 UNIX 系统。因此，大家共同努力关注类 UNIX 系统的普遍问题。为了认识到范围的扩大，该标准的名称更改为文件系统层次结构标准或简称 FHS。


文件系统
-----------------------------------------------------------

该标准假设 FHS 兼容文件系统底层的操作系统支持大多数 UNIX 文件系统中相同的基本安全功能。

可以在文件之间定义两个独立的区别：可共享与不可共享以及可变与静态。一般来说，在这些方面有所不同的文件应位于不同的目录中。这使得在不同文件系统上存储具有不同使用特征的文件变得容易。

“可共享”文件是指可以存储在一台主机上并在其他主机上使用的文件。 “不可共享”文件是指那些不可共享的文件。例如，用户主目录中的文件是可共享的，而设备锁定文件则不可共享。

“静态”文件包括二进制文件、库、文档文件和其他在没有系统管理员干预的情况下不会更改的文件。 “变量”文件是非静态的文件。


FS基本原理

可共享的文件可以存储在一台主机上并在其他几台主机上使用。
然而，通常情况下，并非文件系统层次结构中的所有文件都是可共享的，因此每个系统都有至少包含其不可共享文件的本地存储。
如果系统需要的存储在外部主机上的所有文件都可以通过从外部主机挂载一个或几个目录来提供，那么这是很方便的。

应将静态文件和变量文件分开，因为静态文件与变量文件不同，可以存储在只读介质上，并且不需要与变量文件按相同的计划进行备份。

历史上类似 UNIX 的文件系统层次结构在/usr和 下都包含静态文件和变量文件/etc。
为了实现上述优点，/var创建了层次结构并将所有变量文件从/usr转移到/var。
因此/usr现在可以只读方式安装（如果它是单独的文件系统）。在技​​术允许的情况下，/var变量文件的传输时间/etc较长 。

FHS系统示例：

::

            可共享的         不可共享的
    静态的   /usr            /etc
            /opt	        /boot
    可变的   /var/mail       /var/run
 	        /var/spool/news	/var/lock

根文件系统
-----------------------------------------------------------

最小目的：根文件系统上的内容满足“启动”、“恢复”和“修复”要求。

“启动”需要足够的软件和数据来挂载其他文件系统，包括实用程序、配置、引导加载程序信息和其他重要的启动数据。 

/usr、/opt和/var的设计使得它们可以位于其他分区或文件系统上。

“恢复”或“修复”系统需要经验丰富的维护人员诊断和重建受损系统，所需的实用程序必须存在于根文件系统上。

“恢复”系统，从系统备份（软盘、磁带等）恢复所需的实用程序必须存在于根文件系统上。

基本原理

最低要求：应尽可能小，但不能更小。

虽然许多用户可能不希望分区系统带来额外的复杂性，但出于以下几个原因，应保留保持根较小的选项：

有时它是从非常小的介质安装的。

根文件系统包含许多特定于系统的配置文件。可能的示例包括特定于系统的内核、特定主机名等。这意味着根文件系统并不总是可以在网络系统之间共享。在网络系统的服务器上保持较小的空间可以最大限度地减少不可共享文件区域的空间损失。它还允许具有较小本地硬盘驱动器的工作站。

虽然您可能在一个大分区上拥有根文件系统，并且可以将其填满，但也有人拥有较小的分区。如果安装了更多文件，您可能会发现与在较小分区上使用根文件系统的其他系统不兼容。如果您是开发人员，那么您可能会将您的假设变成大量用户的问题。

与任何其他分区上的错误相比，损坏根文件系统上数据的磁盘错误是一个更大的问题。小型根文件系统不太容易因系统崩溃而损坏。

为了启动过程以及故障恢复情况，必须平衡这些考虑因素与最低限度有用的操作环境的需求。

应用程序绝不能在根目录中创建或需要特殊文件或子目录。 FHS 层次结构中的其他位置为任何包提供了足够的灵活性。

.. note::禁止在根文件系统创建新目录的原因：

1. 它需要根分区上的空间，出于性能或安全原因，系统管理员可能希望该空间保持小而简单。

2. 它规避了系统管理员为跨可安装卷分发标准文件层次结构而设置的任何规则。

3. 如果没有非常仔细地考虑后果（包括应用程序可移植性），发行版不应在根层次结构中创建新目录。

目录及描述：

* bin	基本命令二进制文件

* boot	引导加载程序的静态文件

* dev	设备文件

* etc	主机特定的系统配置

* lib	基本共享库和内核模块

* media	可移动媒体的安装点

* mnt	用于临时挂载文件系统的挂载点

* opt	附加应用软件包

* run	与正在运行的进程相关的数据

* sbin	基本系统二进制文件

* srv	本系统提供的服务数据

* tmp	临时文件

* usr	二级层级（详见下文）

* var	可变数据（详见下文）

可选子系统的目录及描述：

* home	用户主目录（可选）

* lib<qual>	替代格式基本共享库（可选）

* root	root 用户的主目录（可选）

"/bin" 包含供管理员和用户使用的基本命令二进制文件、由脚本间接使用的命令。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

"/bin" 要求：

1. /bin 中不能有子目录

2. /bin 中需要以下命令或命令的符号链接

命令及描述：

* cat	将文件连接到标准输出(conCATenate)

* chgrp	更改文件组所有权

* chmod	更改文件访问权限

* chown	更改文件所有者和组

* cp	复制文件和目录

* date	打印或设置系统数据和时间

* dd	转换和复制文件

* df	报告文件系统磁盘空间使用情况(Filesystem Disk)

* dmesg	打印或控制内核消息缓冲区

* echo	显示一行文本

* false	什么都不做，不成功

* hostname	显示或设置系统主机名

* kill	向进程发送信号

* ln	在文件之间建立链接(LiNks)

* login	用于在系统上启动会话

* ls	列出目录内容

* mkdir	制作目录

* mknod	用于制作块或字符特殊文件（block or character）

* more	用于翻阅文本

* mount	挂载文件系统

* mv	移动/重命名文件

* ps	报告进程状态（Process Status）

* pwd	打印当前工作目录名称（Print Working Directory）

* rm	删除文件或目录

* rmdir	删除空目录

* sed	`sed` 流编辑器（Stream EDitor）

* sh	POSIX 兼容命令 shell

* stty	用于更改和打印终端线路设置

* su	更改用户 ID 

* sync	刷新文件系统缓冲区

* true	什么也不做，成功
  
* umount	卸载文件系统

* uname	打印系统信息

.. note:: “[” 和 ”test“ 命令 必须放在一起，放在 或/bin 中/usr/bin。

可选子系统的命令及描述：

* csh	C shell（可选）

* ed	‘ed’编辑器（可选）

* tar	tar 归档实用程序（可选）

* cpio	cpio 归档实用程序（可选）

* gzip	GNU 压缩实用程序（可选）

* gunzip	GNU 解压缩实用程序（可选）

* zcat	GNU 解压缩实用程序（可选）

* netstat	网络统计实用程序（可选）

* ping	ICMP 网络测试实用程序（可选）

.. note:: tar 、gzip 和cpio命令可用于恢复系统（前提是系统完好无损）。如果不希望从根分区进行恢复，则可以省略。

如果 ROM 根通过 NFS 安装/usr。

如果计划通过网络恢复系统，则ftp 或tftp（以及获得 ftp 连接所需的一切）必须在根分区上可用。

"/boot" 引导加载程序的静态文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

最小目的：包含启动过程所需的所有内容，除了启动时不需要的配置文件和地图安装程序。

因此/boot存储在内核开始执行用户模式程序之前使用的数据。这可能包括保存的主引导扇区和扇区映射文件。

安排引导加载程序能够引导文件所需的程序必须放置在/sbin.引导时不需要的引导加载程序的配置文件必须放置在/etc.

3.5.2.具体选项
操作系统内核必须位于 或 /中/boot。

/boot某些架构可能具有与特定于该架构的限制或期望相关的其他要求 。这些要求这里就不一一列举了；发行版可以根据需要添加要求，以便在这些架构上启用系统启动。

"/dev"设备文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/dev目录是特殊文件或设备文件的位置。

如果可能/dev需要手动创建设备，则/dev必须包含名为MAKEDEV的命令，该命令可以根据需要创建设备。

它还可能包含MAKEDEV.local 用于任何本地设备的。

如果需要，MAKEDEV必须提供创建系统上可能找到的任何设备的规定，而不仅仅是特定发行版安装的设备。

3.7. /etc ：主机特定的系统配置
3.7.1.目的
该/etc层次结构包含配置文件。 “配置文件”是用于控制程序运行的本地文件；它必须是静态的并且不能是可执行的二进制文件。 [2]

建议将文件存储在 的子目录中， /etc而不是直接存储在 /etc.

3.7.2.要求
下不能有任何二进制文件 /etc。

中需要以下目录或目录的符号链接/etc：

目录	描述
选择	/opt 的配置
3.7.3.具体选项
/etc如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
X11	X Window 系统的配置（可选）
sgml	SGML 配置（可选）
XML	XML 配置（可选）
/etc如果安装了相应的子系统，则 必须包含以下文件或文件的符号链接 ： [3]

文件	描述
csh.login	用于 C shell 登录的系统范围初始化文件（可选）
exports	NFS 文件系统访问控制列表（可选）
fstab	有关文件系统的静态信息（可选）
ftpusers	FTP守护进程用户访问控制列表（可选）
gateways	列出路由网关的文件（可选）
gettydefs	getty 使用的速度和终端设置（可选）
group	用户组文件（可选）
host.conf	解析器配置文件（可选）
hosts	有关主机名的静态信息（可选）
hosts.allow	TCP 包装器的主机访问文件（可选）
hosts.deny	TCP 包装器的主机访问文件（可选）
hosts.equiv	rlogin、rsh、rcp 的受信任主机列表（可选）
hosts.lpd	lpd 的可信主机列表（可选）
inetd.conf	inetd 的配置文件（可选）
inittab	init 的配置文件（可选）
issue	预登录消息和识别文件（可选）
ld.so.conf	用于搜索共享库的额外目录列表（可选）
motd	当天的登录后消息文件（可选）
mtab	有关文件系统的动态信息（可选）
mtools.conf	mtools 的配置文件（可选）
networks	有关网络名称的静态信息（可选）
passwd	密码文件（可选）
printcap	lpd 打印机功能数据库（可选）
profile	sh shell 登录的系统范围初始化文件（可选）
protocols	IP协议列表（可选）
resolv.conf	解析器配置文件（可选）
rpc	RPC 协议列表（可选）
securetty	root 登录的 TTY 访问控制（可选）
services	网络服务的端口名称（可选）
shells	有效登录 shell 的路径名（可选）
syslog.conf	syslogd 的配置文件（可选）
mtab不符合 的静态性质 /etc：由于历史原因它被排除在外。 [4]

3.7.4. /etc/opt ：/opt 的配置文件
3.7.4.1.目的
附加应用程序软件包的特定于主机的配置文件必须安装在目录 中 /etc/opt/<subdir>，其中 是存储来自该包的静态数据<subdir>的子树的名称 。/opt

3.7.4.2.要求
的内部安排没有强加任何结构 /etc/opt/<subdir>。

如果配置文件必须驻留在不同的位置才能使程序包或系统正常运行，则可以将其放置在 /etc/opt/<subdir>.

基本原理
请参阅 的理由/opt。

3.7.5。 /etc/X11 ：X Window 系统的配置（可选）
3.7.5.1.目的
/etc/X11是所有 X11 主机特定配置的位置。如果/usr以只读方式安装，则需要此目录才能进行本地控制

3.7.5.2.具体选项
/etc/X11如果安装了相应的子系统，则必须包含以下文件或文件的符号链接 ：

文件	描述
xorg.conf	X.org 版本 7 及更高版本的配置文件（可选）
Xmodmap	全局X11键盘修改文件（可选）
的子目录/etc/X11可能包括那些xdm需要它们的任何其他程序（例如某些窗口管理器）的子目录。 [5]

3.7.6。 /etc/sgml ：SGML 的配置文件（可选）
3.7.6.1.目的
定义 SGML 系统高级参数的通用配置文件安装在此处。带名称的文件 *.conf表示通用配置文件。带有名称的文件*.cat是特定于 DTD 的集中目录，包含对使用给定 DTD 所需的所有其他目录的引用。超级目录文件 catalog引用所有集中目录。

3.7.7. /etc/xml ：XML 配置文件（可选）
3.7.7.1.目的
定义 XML 系统高级参数的通用配置文件安装在此处。带名称的文件 *.conf表示通用配置文件。超级目录文件 catalog引用所有集中目录。

3.8. /home ：用户主目录（可选）
3.8.1.目的
/home是一个相当标准的概念，但它显然是一个特定于站点的文件系统。 [6] 不同主机的设置会有所不同。因此，任何程序都不应该假定主目录的任何特定位置，而是应该查询它。 [7]

3.8.2.要求
应用程序的用户特定配置文件存储在用户主目录中以“.”开头的文件中。字符（“点文件”）。如果应用程序需要创建多个点文件，则应将它们放置在名称以“.”开头的子目录中。字符，（“点目录”）。在这种情况下，配置文件不应以“.”开头。特点。 [8]

3.8.3.主目录规范和约定
过去已经做出了许多努力来标准化主目录的布局，包括 XDG 基目录规范 [9] 和关于用户目录内容的 GLib 约定。 [10] 未来有可能朝这个方向做出更多努力。为了适应使用这些规范和约定的软件，发行版可以创建遵循规范和约定的目录层次结构。这些目录层次结构可能位于主目录下。

3.9. /lib ：基本共享库和内核模块
3.9.1.目的
该/lib目录包含引导系统和运行根文件系统中的命令所需的共享库映像，即通过/bin和 中的二进制文件/sbin。 [11]

3.9.2.要求
至少需要以下每种文件名模式之一（它们可以是文件或符号链接）：

文件	描述
libc.so.*	动态链接的 C 库（可选）
ld*	执行时间链接器/加载器（可选）
如果安装了 C 预处理器，由于历史原因， /lib/cpp 必须是对其的引用。 [12]

3.9.3.具体选项
/lib如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
modules	可加载内核模块（可选）
3.10. /lib <qual>：替代格式基本共享库（可选）
3.10.1.目的
/lib在支持多种需要单独库的二进制格式的系统上， 可能存在一种或多种目录变体 。 [13]

3.10.2.要求
如果存在一个或多个这些目录，则其内容的要求与普通目录相同/lib ，但不是必需的。 [14]/lib<qual>/cpp

3.11. /media ：可移动媒体的安装点
3.11.1.目的
此目录包含用作可移动介质（例如软盘、cdrom 和 zip 磁盘）的安装点的子目录。

基本原理
历史上曾有许多其他不同的位置用于安装可移动介质，例如/cdrom、 /mnt或/mnt/cdrom。将所有可移动媒体的安装点直接放置在根目录中可能会导致/.尽管使用子目录作为/mnt挂载点最近很常见，但它与/mnt直接用作临时挂载点的更古老的传统相冲突。

3.11.2.具体选项
/media如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
floppy	软盘驱动器（可选）
cdrom	CD-ROM 驱动器（可选）
cdrecorder	CD 刻录机（可选）
zip	压缩驱动器（可选）
在存在多个用于安装某种类型媒体的设备的系统上，可以通过在上面以“0”开头的可用设备的名称后附加一个数字来创建安装目录，但非限定名称也必须存在。 [15]

3.12. /mnt ：临时挂载文件系统的挂载点
3.12.1.目的
提供此目录是为了系统管理员可以根据需要临时挂载文件系统。该目录的内容是本地问题，不应影响任何程序的运行方式。

安装程序不得使用此目录：必须使用系统未使用的合适临时目录。

3.13. /opt ：附加应用程序软件包
3.13.1.目的
/opt保留用于安装附加应用程序软件包。

要安装的软件包/opt必须在单独的目录树中找到其静态文件 /opt/<package>， /opt/<provider>其中<package>是描述软件包的名称，并且 <provider>是提供商的 LANANA 注册名称。

3.13.2.要求
目录	描述
<包装>	静态包对象
<提供商>	LANANA 注册提供商名称
目录/opt/bin、 /opt/doc、/opt/include、 /opt/info、/opt/lib和 /opt/man保留供本地系统管理员使用。软件包可以提供旨在由本地系统管理员放置（通过链接或复制）这些保留目录的“前端”文件，但必须在没有这些保留目录的情况下正常运行。

用户调用的程序必须位于目录 /opt/<package>/bin或 /opt/<provider>层次结构下。如果包包含 UNIX 手册页，则它们必须位于层次结构中 /opt/<package>/share/man或 /opt/<provider>层次结构之下，并且/usr/share/man必须使用相同的子结构。

可变的包文件（正常操作中的更改）必须安装在/var/opt./var/opt有关详细信息，请参阅 部分。

特定于主机的配置文件必须安装在 /etc/opt./etc有关详细信息，请参阅 部分 。

除了那些必须驻留在文件系统树中特定位置才能正常运行的包文件之外，在 、 和 层次结构/opt之外/var/opt不得 存在其他包文件 。/etc/opt例如，设备锁定文件必须放置在 中/var/lock，设备必须位于 中/dev。

发行版可以在 /opt适当注册的子目录下安装和以其他方式管理软件。

基本原理
使用/opt附加软件是 UNIX 社区中的一种行之有效的做法。 System V 应用程序二进制接口 [AT&T 1990] 基于 System V 接口定义（第三版），提供了 /opt与此处定义的结构非常相似的结构。

英特尔二进制兼容性标准 v.2 (iBCS2) 也为/opt.

一般来说，支持系统上的包所需的所有数据都必须存在于 中/opt/<package>，包括要复制到 中的文件 /etc/opt/<package>以及 /var/opt/<package>中的保留目录/opt。

对发行版使用的小限制 /opt是必要的，因为发行版安装的软件和本地安装的软件之间可能会发生冲突，特别是在某些二进制软件中发现固定路径名的情况下。

下面的目录结构 /opt/<provider>由软件的打包者决定，但建议将软件包安装在/opt/<provider>/<package>并遵循与 /opt/<package>.偏离此结构的一个有效原因是支持包可能安装有文件在/opt/<provider>/lib或 中/opt/<provider>/bin。

3.14。 /root ：root 用户的主目录（可选）
3.14.1.目的
根帐户的主目录可以由开发人员或本地首选项确定，但这是建议的默认位置。 [16]

3.15。 /run : 运行时变量数据
3.15.1.目的
该目录包含描述系统自启动以来的系统信息数据。在启动过程开始时，必须清除（根据需要删除或截断）此目录下的文件。

该目录的用途曾经是由 /var/run.一般来说，程序可以继续使用来满足出于向后兼容性的目的而/var/run设定的要求。/run已迁移到使用的程序 /run应停止使用 /var/run，除非有关 的部分中另有说明 /var/run。

程序可能有一个子目录 /run；对于使用多个运行时文件的程序，鼓励这样做。用户还可能拥有 的子目录/run，但必须注意适当限制访问权限，以防止未经授权使用其 /run本身和其他子目录。 [17]

3.15.2.要求
最初放置在 中的进程标识符 (PID) 文件 /etc必须放置在 /run. PID 文件的命名约定是 <program-name>.pid.例如， crond PID 文件名为 /run/crond.pid.

PID 文件的内部格式保持不变。该文件必须包含 ASCII 编码的十进制进程标识符，后跟换行符。例如，如果 crond是进程号 25， /run/crond.pid则将包含三个字符：两个、五个和换行符。

读取 PID 文件的程序在接受的内容上应该具有一定的灵活性；即，它们应该忽略额外的空格、前导零、缺少尾随换行符或 PID 文件中的其他行。创建 PID 文件的程序应使用上一段中的简单规范。

维护瞬态 UNIX 域套接字的系统程序必须将它们放置在该目录或上述适当的子目录中。

3.16。 /sbin ：系统二进制文件
3.16.1.目的
用于系统管理的实用程序（以及其他仅限 root 的命令）存储在/sbin、 /usr/sbin和 中/usr/local/sbin。 /sbin 除了 /bin. [18]/usr已知安装后（没有问题时） 执行的程序 通常被放入/usr/sbin.本地安装的系统管理程序应放入 /usr/local/sbin. [19]

3.16.2.要求
中不能有子目录/sbin。

中需要以下命令或命令的符号链接/sbin：

命令	描述
关闭	命令关闭系统。
3.16.3。具体选项
/sbin如果安装了相应的子系统，则必须包含以下文件或文件的符号链接 ：

命令	描述
fastboot	重新启动系统而不检查磁盘（可选）
fasthalt	停止系统而不检查磁盘（可选）
fdisk	分区表机械手（可选）
fsck	文件系统检查和修复实用程序（可选）
fsck.*	针对特定文件系统的文件系统检查和修复实用程序（可选）
getty	getty 程序（可选）
halt	停止系统的命令（可选）
ifconfig	配置网络接口（可选）
init	初始过程（可选）
mkfs	构建文件系统的命令（可选）
mkfs.*	构建特定文件系统的命令（可选）
mkswap	设置交换区的命令（可选）
reboot	重新启动系统的命令（可选）
route	IP 路由表实用程序（可选）
swapon	启用分页和交换（可选）
swapoff	禁用分页和交换（可选）
update	定期刷新文件系统缓冲区的守护进程（可选）
3.17。 /srv ：该系统提供的服务的数据
3.17.1.目的
/srv包含由该系统提供的特定于站点的数据。

基本原理
指定这一点的主要目的是为了让用户可以找到特定服务的数据文件的位置，从而可以合理地放置需要单棵树存储只读数据、可写数据和脚本（例如cgi脚本）的服务。仅特定用户感兴趣的数据应存放在该用户的主目录中。如果数据的目录和文件结构不暴露给消费者，则应该放入/var/lib.

用于命名 的子目录的方法 /srv未指定，因为目前对于如何完成此操作尚未达成共识。一种用于构建数据的方法/srv是通过协议，例如。ftp，rsync， www， 和cvs。在大型系统上/srv，按管理上下文（例如/srv/physics/www、 等）进行构建可能很有用。/srv/compsci/cvs此设置因主机而异。因此，任何程序都不应依赖/srv现有的特定子目录结构或必然存储在 中的数据/srv。但是， /srv应始终存在于 FHS 兼容系统上，并应用作此类数据的默认位置。

发行版必须注意，未经管理员许可，不要删除本地放置在这些目录中的文件。 [20]

3.18。 /tmp ：临时文件
3.18.1.目的
该/tmp目录必须可供需要临时文件的程序使用。

程序不得假定在 /tmp程序调用之间保留任何文件或目录。

基本原理
IEEE 标准 POSIX.1-2008 列出了与上述部分类似的要求。

尽管可以以特定于站点的方式删除 中存储的数据/tmp，但建议/tmp在系统启动时删除位于 中的文件和目录。

FHS 根据历史先例和惯例添加了此建议，但并未将其作为要求，因为系统管理不在本标准的范围内。


[1] 不重要的命令二进制文件 /bin必须放入 中 /usr/bin。仅非 root 用户需要的项目（X Window 系统chsh等）通常不足以放置到根分区中。

[2] 需要明确的是，/etc可能包含可执行脚本，例如通常调用来 init启动和关闭系统以及启动守护进程的命令脚本。在本文中，“可执行二进制文件”指的是非人类可读格式的直接机器代码或伪代码，例如本机 ELF 可执行文件。

[3] 使用影子密码套件的系统将在/etc （（ useradd、 usermod和其他） /etc/shadow程序 /usr/sbin

[4] 在某些 Linux 系统上，这可能是到 的符号链接 /proc/mounts，在这种情况下不需要此异常。

[5] /etc/X11/xdm保存 xdm.这些是以前在/usr/lib/X11/xdm.的一些局部变量数据xdm存储在 /var/lib/xdm.

[6] 不同的人喜欢将用户帐户放置在不同的地方。本节仅描述用户主目录的建议放置位置；不过，我们建议所有符合 FHS 的发行版都使用此位置作为用户主目录的默认位置。出于管理目的而创建的非登录帐户通常在其他地方拥有其主目录。

在较小的系统上，每个用户的主目录通常实现为直接在 下的子目录/home，例如 /home/smith、/home/torvalds、 /home/operator等。在大型系统上（特别是当/home使用 NFS 在许多主机之间共享目录时），细分用户主目录很有用。可以通过使用/home/staff、 /home/guests、 /home/students等 子目录来完成细分。

[7] 要查找用户的主目录，请使用getpwent, getpwent_r，而 fgetpwent不是依赖 ，/etc/passwd因为用户信息可能使用 NIS 等系统远程存储。

[8] 建议，除了自动保存和锁定文件之外，未经用户同意，程序应避免在主目录中创建非点文件或目录。

[9]位于 http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html 和 http://www.freedesktop.org/wiki/Software/xdg-user-dirs。

[10] GLib 约定的描述可以在 GUserDirectory 文档中找到，网址为： http://developer.gnome.org/glib/unstable/glib-Miscellaneous-Utility-Functions.html#GUserDirectory。

[11] 仅对于二进制文件（例如任何 X Window 二进制文件）所需的共享库 /usr不得位于/lib.只有运行二进制文件所需的共享库/bin可能 /sbin位于此处。特别是， 或中的任何内容不需要 libm.so.*，也可以将其放入 中 。 /usr/lib/bin/sbin

[12] 该二进制文件的通常位置是/usr/bin/cpp.

[13] 这通常用于支持多种二进制格式但需要同名库的系统上的 64 位或 32 位支持。在这种情况下，/lib32和 /lib64可能是库目录，以及 /lib其中之一的符号链接。

[14] 仍然是允许的：这允许和 情况（一个是另一个的符号链接）。/lib<qual>/cpp/lib/lib<qual>

[15] 具有两个 CDROM 驱动器的兼容发行版可能具有 /media/cdrom0和 /media/cdrom1到 /media/cdrom其中任何一个的符号链接。

[16]如果根帐户的主目录未存储在根分区上，则有必要确保/如果无法找到它，则将默认为该目录。

我们建议不要使用 root 帐户来执行可以作为非特权用户执行的任务，而应仅将其用于系统管理。因此，我们建议邮件和其他应用程序的子目录不要出现在 root 帐户的主目录中，并且将管理角色（例如 root、postmaster 和 webmaster）的邮件转发给适当的用户。

[17] /run对于非特权用户不应该是可写的；如果任何用户可以在该目录中写入，这将是一个主要的安全问题。用户特定的子目录只能由每个目录的所有者写入。

[18] 最初，/sbin二进制文件保存在 /etc.

[19]决定将哪些内容放入 “sbin”目录很简单：如果普通（非系统管理员）用户将直接运行它，那么它必须放置在“bin”目录之一中。sbin 在其路径中放置任何

例如，用户偶尔使用的 chfn/usr/bin等文件仍必须放置在. ping/bin ，尽管它对于root（网络恢复和诊断）来说是绝对必要的，但用户经常使用它并且因此必须存在。

我们建议用户对/sbin除某些 setuid 和 setgid 程序之外的所有内容都拥有读取和执行权限。/bin和之间的划分 /sbin并不是出于安全原因或防止用户查看操作系统，而是为了在每个人都使用的二进制文件和主要用于管理任务的二进制文件之间提供良好的分区。/sbin对用户进行限制并 没有固有的安全优势 。

[20] 这一点特别重要，因为这些区域通常包含分发者最初安装的文件和管理员添加的文件。


"/usr"层次结构
-----------------------------------------------------------

/usr是rootfs的第二大块。

/usr是可共享的只读数据，这意味着它应该可以在各种符合 FHS 的主机之间共享，并且不能写入。

任何特定于主机或随时间变化的信息都存储在其他地方。

大型软件包不得使用/usr层次结构下的直接子目录。

/usr中需要以下目录或目录的符号链接：

* bin/	大多数用户命令
  
* lib/	库
  
* local/	本地层次结构（主要安装后为空）
  
* sbin/	非重要系统二进制文件
  
* share/    独立于架构的数据
  
可选子系统：

* games/	游戏和教育二进制文件（可选）

* include/	C程序包含的头文件

* libexec/	由其他程序运行的二进制文件（可选）

* lib<qual>/	替代格式库（可选）

* src/	源代码（可选）

由于有相当多的先例和广泛接受的实践，X Window 系统是一个例外。

.. note:: 可能存在以下目录符号链接。这种可能性是基于需要保持与旧系统的兼容性，直到可以假设所有发行版都使用层次结构 /var。

- /usr/spool -> /var/spool
  
- /usr/tmp -> /var/tmp

- /usr/spool/locks -> /var/lock

.. note:: 一旦系统不再需要上述任何一个符号链接，如果需要，可以删除该链接。

"/usr/bin"大多数用户命令
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

系统上可执行命令的主目录，不能有子目录/usr/bin。

/usr/bin如果安装了相应的子系统，则以下文件或文件的符号链接必须位于 中：

* perl	实用的提取和报告语言（可选）

* python	Python 解释语言（可选）

* tclsh	包含 Tcl 解释器的简单 shell（可选）

* wish	简单的 Tcl/Tk 窗口 shell（可选）

* expect    交互式对话程序（可选）

.. note::在许多可执行脚本中，要调用来执行脚本的解释器是 在脚本的第一行指定的。为了使此类脚本在不同系统之间可移植，标准化解释器位置是有利的。 shell 解释器已经由本规范固定，但 Perl、Python、Tcl 和 Expect 的解释器可能安装在不同的地方。这里指定的位置可以被实现为到解释器的物理位置的符号链接。 #!path_to_interpreter/bin

"/usr/include"标准包含文件的目录。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

所有系统通用的 C 编程语言包含文件应放置的位置。

4.5.2.具体选项
/usr/include如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
BSD	BSD 兼容性包含文件（可选）
4.6. /usr/lib ：用于编程和包的库
4.6.1.目的
/usr/lib包括目标文件和库。 [21] 在某些系统上，它还可能包含不打算由用户或 shell 脚本直接执行的内部二进制文件。 [22]

应用程序可以使用 下的单个子目录 /usr/lib。如果应用程序使用子目录，则该应用程序专用的所有依赖于体系结构的数据都必须放置在该子目录中。 [23]

4.6.2.具体选项
由于历史原因，/usr/lib/sendmail 必须是一个符号链接，该链接解析为 系统邮件传输代理提供的 sendmail兼容命令（如果后者存在）。 [24] [25]

4.7. /usr/libexec ：其他程序运行的二进制文件（可选）
4.7.1.目的
/usr/libexec包括不打算由用户或 shell 脚本直接执行的内部二进制文件。应用程序可以使用 下的单个子目录 /usr/libexec。

以这种方式使用的应用程序/usr/libexec不得同时用于/usr/lib存储内部二进制文件，尽管它们可能用于/usr/lib此处记录的其他目的。

基本原理
本文档的某些早期版本不支持 /usr/libexec，尽管它是许多环境中的标准做法。 [26] 为了适应这一限制，使用 /usr/lib替代方法已成为常见的做法。现在这两种做法都是可以接受的，但是每个应用程序必须选择一种方式来组织自身。

4.8. /usr/lib <qual>：替代格式库（可选）
4.8.1.目的
/usr/lib<qual>/usr/lib与备用二进制格式的 作用相同，但不需要 符号链接和。 [27]/usr/lib<qual>/sendmail/usr/lib<qual>/X11

4.9. /usr/local ：本地层次结构
4.9.1.目的
该/usr/local层次结构供系统管理员在本地安装软件时使用。当系统软件更新时，它需要确保不被覆盖。它可用于可在一组主机之间共享的程序和数据，但在/usr.

本地安装的软件必须放置在 /usr/local而不是/usr 除非安装它是为了替换或升级软件 /usr。 [28]

4.9.2.要求
以下目录或目录的符号链接必须位于/usr/local

目录	描述
bin	本地二进制文件
etc	本地二进制文件的主机特定系统配置
games	本地游戏二进制文件
include	本地 C 头文件
lib	当地图书馆
man	本地在线手册
sbin	本地系统二进制文件
share	本地架构独立的层次结构
src	本地源代码
/usr/local首次安装符合 FHS 的系统后，除下列目录外，不得存在其他目录 。

4.9.3.具体选项
如果目录或 存在，则等效目录也必须存在于./lib<qual>/usr/lib<qual>/usr/local

/usr/local/etc可能是到 的符号链接 /etc/local。

基本原理
的一致性/usr/local/etc对安装人员有利，并且已经在其他系统中使用。由于/usr/local需要备份所有内容才能重现系统，因此它不会引入额外的维护开销，但/etc/local如果系统希望将所有配置都放在一个层次结构下，则符号链接 是合适的。

请注意，这/usr/etc仍然是不允许的：程序/usr应该将配置文件放在 /etc.

如果该目录/usr/share/color按照本文档中的指定存在，则该目录 /usr/local/share/color也必须存在，并受与/usr/share/color.

基本原理
这种用法允许系统管理员在必要时手动安装颜色配置文件。

4.9.4。 /usr/local/share ：本地架构独立的层次结构
该目录内容的要求与/usr/share.

4.10. /usr/sbin ：非必需的标准系统二进制文件
4.10.1.目的
此目录包含系统管理员专用的任何非必需的二进制文件。/usr必须放置系统修复、系统恢复、安装或其他基本功能所需的系统管理程序/sbin。 [29]

4.10.2.要求
中不能有子目录/usr/sbin。

4.11. /usr/share ：与体系结构无关的数据
4.11.1.目的
该/usr/share层次结构适用于所有只读架构独立的数据文件。 [30]

该层次结构旨在在给定操作系统的所有架构平台之间共享；因此，例如，具有 i386、Alpha 和 PPC 平台的站点可能会维护一个 /usr/share集中安装的单个目录。但请注意，/usr/share通常不打算由不同操作系统或同一操作系统的不同版本共享。

任何包含或需要不需要修改的数据的程序或包都应该将该数据存储在 /usr/share（或 /usr/local/share，如果本地安装）。建议 /usr/share为此目的使用子目录。使用单个文件的应用程序可以使用/usr/share/misc.

存储的游戏数据/usr/share/games必须是纯静态数据。任何可修改的文件，例如分数文件、游戏日志等，都应放置在 /var/games.

4.11.2.要求
以下目录或目录的符号链接必须位于/usr/share

目录	描述
man	在线手册
misc	各种独立于架构的数据
4.11.3.具体选项
/usr/share如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
color	颜色管理信息（可选）
dict	单词列表（可选）
doc	杂项文档（可选）
games	/usr/games 的静态数据文件（可选）
info	GNU Info 系统的主目录（可选）
locale	区域设置信息（可选）
nls	支持本机语言的消息目录（可选）
ppd	打印机定义（可选）
sgml	SGML 数据（可选）
terminfo	terminfo 数据库的目录（可选）
tmac	troff 宏不随 groff 一起分发（可选）
xml	XML 数据（可选）
zoneinfo	时区信息和配置（可选）
建议将特定于应用程序的、与体系结构无关的目录放置在此处。此类目录包括groff、perl、 Ghostscript、texmf和 kbd (Linux) 或syscons (BSD)。然而，它们可以被放置/usr/lib 以实现向后兼容性，由发行商自行决定。类似地，如果分发者希望在那里放置一些游戏数据，则/usr/lib/games除了层级之外还可以使用层级。/usr/share/games

4.11.4. /usr/share/color ：颜色管理信息（可选）
4.11.4.1.目的
该目录是系统安装的ICC色彩管理文件的所在地。

4.11.4.2.具体选项
/usr/share/color如果安装了相应的子系统，则以下目录必须位于：

Directory	描述
icc	ICC 颜色配置文件（可选）
顶级目录/usr/share/color 不能包含任何文件；所有文件都应该位于 /usr/share/color.

4.11.5。 /usr/share/dict ：单词列表（可选）
4.11.5.1.目的
该目录是系统上单词列表的所在地；传统上，该目录仅包含英文 文件，由Look(1)和各种拼写程序 words使用 。可以使用美式或英式拼写。words

基本原理
此处仅存在单词列表的原因是它们是所有拼写检查器唯一通用的文件。

4.11.5.2.具体选项
/usr/share/dict如果安装了相应的子系统，则以下文件或文件的符号链接必须位于 中：

File	描述
words	英语单词列表（可选）
需要美式和英式拼写的网站可能会链接 words到 ­/usr/share/dict/american-english或 ­/usr/share/dict/british-english。

可以使用该语言的英文名称添加其他语言的单词列表，例如，，， /usr/share/dict/french等 /usr/share/dict/danish。如果可能，这些应该使用基于 Unicode 的字符集，其中 UTF-8 字符集是首选。

其他单词列表必须包含在此处（如果存在）。

"/usr/share/man"手册页
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整个系统中手册页的组织，包括/usr/share/man.另请参阅有关 的部分 /var/cache/man。

<mandir>该系统的 主要部分是/usr/share/man. 包含和 文件系统/usr/share/man下的命令和数据的手册信息。 [31]//usr

手册页存储在 <mandir>/<locale>/man<section>/<arch>.下面给出<mandir>、 <locale>、 <section>、 和 的解释。<arch>

每个部分的描述如下：

* man1：用户程序，大多数程序文档

* man2：系统调用（请求内核执行操作）。

* man3：库函数和子例程 第 3 节描述了不直接调用内核服务的程序库例程。只有程序员真正感兴趣的是这一章和第 2 章。

* man4：特殊文件 第 4 节描述了系统中可用的特殊文件、相关驱动程序功能和网络支持。通常，这包括在网络协议支持中找到的设备文件/dev和内核接口。

* man5：文件格式 第 5 节中记录了许多数据文件的格式。这包括各种包含文件、程序输出文件和系统文件。

* man6：游戏 本章记录了游戏、演示和一般琐碎的程序。不同的人对其重要性有不同的看法。

* man7：难以分类的杂项手册页被指定为第 7 节。 troff 和其他文本处理宏包可以在这里找到。

* man8：系统管理 系统管理员用于系统操作和维护的程序记录于此。其中一些程序有时也对普通用户有用。

4.11.6.2.具体选项
以下目录或目录的符号链接必须位于 中 /usr/share/<mandir>/<locale>，除非它们为空： [32]

目录	描述
man1	用户程序（可选）
man2	系统调用（可选）
man3	库调用（可选）
man4	特殊文件（可选）
man5	文件格式（可选）
man6	游戏（可选）
man7	杂项（可选）
man8	系统管理（可选）
该组件<section>描述了手册部分。

必须在结构中做出规定 /usr/share/man以支持以不同（或多种）语言编写的手册页。这些规定必须考虑到这些手册页的存储和参考。相关因素包括语言（包括基于地理的差异）和字符代码集。

语言子目录的命名 /usr/share/man基于 POSIX 1003.1 标准的附录 E，该标准描述了区域设置标识字符串，这是描述文化环境的最广泛接受的方法。该<locale>字符串是：

<language>[_<territory>][.<character-set>][,<version>]

该<language>字段必须取自 ISO 639（表示语言名称的代码）。它必须是两个字符宽，并且只能使用小写字母指定。

如果可能，该<territory>字段必须是 ISO 3166（国家/地区表示规范）的两个字母代码。 （大多数人都熟悉电子邮件地址中用于国家/地区代码的两个字母代码。）它必须为两个字符宽，并且仅使用大写字母指定。 [33]

该<character-set>字段必须代表描述字符集的标准。如果该 ­<character-set>字段只是一个数字规范，则该数字代表描述字符集的国际标准的编号。如果可能的话，建议采用数字表示（尤其是 ISO 标准），不包含其他标点符号，并且所有字母均采用小写。

指定配置文件的参数<version>可以放置在 ­<character-set>字段之后，以逗号分隔。这可用于区分不同的文化需求；例如，字典顺序与更面向系统的整理顺序。本标准建议 <version>除非必要，否则不要使用该字段。

对所有手册页使用唯一语言和代码集的系统可能会省略<locale>子字符串并将所有手册页存储在<mandir>.例如，只有用 ASCII 编码的英文手册页的系统可以 man<section>直接将手册页（目录）存储在 /usr/share/man. （事实上​​，这就是传统的情况和安排。）

拥有广泛接受的标准字符代码集的国家/地区可能会省略该­<character-set> 字段，但强烈建议将其包含在内，特别是对于拥有多个竞争标准的国家/地区。

各种例子：

语言	领土	字符集	目录
英语	—	ASCII码	/usr/share/man/cn
英语	英国	统一码 UTF-8	/usr/share/man/en_GB.10646
英语	美国	ASCII码	/usr/share/man/en_US
法语	加拿大	ISO 8859-1	/usr/share/man/fr_CA.88591
法语	法国	ISO 8859-1	/usr/share/man/fr_FR.88591
德语	德国	ISO 646	/usr/share/man/de_DE.646
德语	德国	ISO 6937	/usr/share/man/de_DE.6937
德语	德国	ISO 8859-1	/usr/share/man/de_DE.88591
德语	瑞士	ISO 646	/usr/share/man/de_CH.646
日本人	日本	日本工业标准	/usr/share/man/ja_JP.jis
日本人	日本	石家庄信息系统	/usr/share/man/ja_JP.sjis
日本人	日本	UJIS（或 EUC-J）	/usr/share/man/ja_JP.ujis
日本人	日本	统一码 UTF-16	/usr/share/man/ja_JP.10646
同样，必须提供依赖于体系结构的手册页，例如有关设备驱动程序或低级系统管理命令的文档。这些必须放在<arch>相应 man<section>目录的目录下；例如，i386 ctrlaltdel(8) 命令的手册页可能会放在 /usr/share/man/<locale>/man8/i386/ctrlaltdel.8.

命令和数据的手册页 /usr/local存储在 /usr/local/man或 中/usr/local/share/man。系统中的所有手册页层次结构必须具有与 相同的结构 /usr/share/man，因为使用手册页内容的命令需要此结构。 [34]

包含格式化手册页条目的cat 页面部分 ( cat<section>) 也可以在 的子目录中找到<mandir>/<locale>，但不是必需的，也不能用它们来代替 nroff 源手册页进行分发。

编号部分“1”到“8”是按照传统方式定义的。一般来说，位于特定部分的手册页的文件名以.<section>.

此外，一些大型应用程序特定的手册页集在手册页文件名后附加了一个附加后缀。例如，MH 邮件处理系统手册页必须附加 mh到所有 MH 手册中。所有 X Window 系统手册页都必须x在文件名后附加 。

将各种语言手册页放置在适当的子目录中的做法/usr/share/man也适用于其他手册页层次结构，例如 /usr/local/man. （该标准的这一部分也适用于后面关于可选结构的部分 /var/cache/man。）

4.11.7。 /usr/share/misc ：各种独立于体系结构的数据
该目录包含各种与体系结构无关的文件，这些文件不需要在 /usr/share.

4.11.7.1.具体选项
/usr/share/misc如果安装了相应的子系统，则以下文件或文件的符号链接必须位于 中：

文件	描述
ascii	ASCII 字符集表（可选）
termcap	终端能力数据库（可选）
termcap.db	终端能力数据库（可选）
/usr/lib其他（特定于应用程序的）文件可能会出现在此处，但分销商可以自行决定 将其放入其中。 [35] [36]

4.11.8。 /usr/share/ppd ：打印机定义（可选）
4.11.8.1.目的
/usr/share/ppd包含 PostScript 打印机定义 (PPD) 文件，许多打印系统将其用作打印机驱动程序的描述。 PPD 文件可以放置在此目录中或子目录中。

4.11.9。 /usr/share/sgml ：SGML 数据（可选）
4.11.9.1.目的
/usr/share/sgml包含 SGML 应用程序使用的与体系结构无关的文件，例如普通目录（不是集中式目录，请参阅 参考资料 /etc/sgml）、DTD、实体或样式表。

4.11.9.2.具体选项
/usr/share/sgml如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
docbook	文档 DTD（可选）
tei	tei DTD（可选）
html	html DTD（可选）
mathml	mathml DTD（可选）
不特定于给定 DTD 的其他文件可能驻留在它们自己的子目录中。

4.11.10。 /usr/share/xml ：XML 数据（可选）
4.11.10.1.目的
/usr/share/xml包含 XML 应用程序使用的与体系结构无关的文件，例如普通目录（不是集中式目录，请参阅 参考资料 /etc/sgml）、DTD、实体或样式表。

4.11.10.2.具体选项
/usr/share/xml如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
docbook	docbook XML DTD（可选）
xhtml	XHTML DTD（可选）
mathml	MathML DTD（可选）
4.12. /usr/src ：源代码（可选）
4.12.1.目的
源代码可能放在该子目录中，仅供参考。 [37]


[21]各种独立于体系结构的特定于应用程序的静态文件和子目录必须放置在/usr/share.

[22]请参阅下面的 参考资料 部分 与可执行二进制文件 /usr/libexec 的讨论/usr/lib/usr/libexec

[23]例如，perl5Perl 5 模块和库的子目录。

[24] 一些可执行命令（例如makewhatis和 sendmail）传统上也放置在 /usr/lib. makewhatis是内部二进制文件，必须放置在二进制目录中；用户仅访问catman。较新的sendmail 二进制文件现在默认放置在/usr/sbin.此外，使用与sendmail兼容的邮件传输代理的系统必须提供/usr/sbin/sendmail 作为sendmail命令，或者作为可执行文件本身，或者作为相应可执行文件的符号链接。

[25] X Window 系统的主机特定数据不得存储在 /usr/lib/X11.特定于主机的配置文件，例如xorg.conf必须存储在 /etc/X11.这包括配置数据，即使system.twmrc它只是指向更全局的配置文件（可能在 /usr/lib/X11）的符号链接。

[26]例如，参见自由软件基金会的“GNU 编码标准”。

[27] 如果/usr/lib和相同（一个是另一个的符号链接），这些文件和每个应用程序的子目录将存在。 /usr/lib<qual>

[28]系统升级 中放置的软件/或 这些情况下/usr不要覆盖数据 没有充分理由 /etc，本地软件不得放置在外部 /usr/local

[29] 本地安装的系统管理程序应放置在 /usr/local/sbin.

[30] 大部分数据最初位于/usr (man,doc) 或 /usr/lib(dict, terminfo,zoneinfo) 中。

[31]显然，没有手册页，/ 因为启动时不需要它们，紧急情况下也不需要它们。真的。

[32]例如，如果/usr/share/man 第 4 节（设备）中没有手册页，则 /usr/share/man/man4可以省略。

[33]此规则的一个主要例外是英国，在 ISO 3166 中为“GB”，但大多数电子邮件地址为“UK”。

[34] /usr/local/man已被弃用，并且可能会在本规范的未来版本中被删除。

[35] 一些此类文件包括： airport,birthtoken, eqnchar,getopt, gprof.callg,gprof.flat, inter.phone,ipfw.samp.filters, ipfw.samp.scripts,keycap.pcvt, mail.help,,, ,, ,, ,mail.tildehelp, , ,, ,, ,。 man.templatemap3270mdoc.templatemore.helpna.phonenslookup.helpoperatorscsi_modessendmail.hfstyleunits.libvgrindefsvgrindefs.dbzipcodes

[36] 历史上，该magic文件被放置在 中 /usr/share/misc，但 file 命令的现代变体使用多个文件并将它们放置在 /usr/share/file.为了兼容性，分发可能会在 处创建一个符号链接 /usr/share/misc/magic，指向 /usr/share/file/magic。

[37] 一般来说，源代码不应该构建在这个层次结构中。

第 5 章 /var 层次结构
目录

5.1.目的
5.2.要求
5.3.具体选项
5.4. /var/account ：处理记帐日志（可选）
5.4.1.目的
5.5. /var/cache ：应用程序缓存数据
5.5.1.目的
5.5.2.具体选项
5.5.3. /var/cache/fonts ：本地生成的字体（可选）
5.5.4. /var/cache/man ：本地格式的手册页（可选）
5.6. /var/crash ：系统故障转储（可选）
5.6.1.目的
5.7. /var/games ：可变游戏数据（可选）
5.7.1.目的
5.8. /var/lib : 变量状态信息
5.8.1.目的
5.8.2.要求
5.8.3.具体选项
5.8.4. /var/lib/<editor> ：编辑器备份文件和状态（可选）
5.8.5。 /var/lib/color ：颜色管理信息（可选）
5.8.6。 /var/lib/hwclock ：hwclock 的状态目录（可选）
5.8.7. /var/lib/misc ：杂项变量数据
5.9. /var/lock : 锁定文件
5.9.1.目的
5.10. /var/log ：日志文件和目录
5.10.1.目的
5.10.2.具体选项
5.11. /var/mail ：用户邮箱文件（可选）
5.11.1.目的
5.12. /var/opt ：/opt 的变量数据
5.12.1.目的
5.13。 /var/run ：运行时变量数据
5.13.1.目的
5.13.2.要求
5.14。 /var/spool ：应用程序假脱机数据
5.14.1.目的
5.14.2.具体选项
5.14.3。 /var/spool/lpd ：行式打印机守护进程打印队列（可选）
5.14.4. /var/spool/rwho ：Rwhod 文件（可选）
5.15。 /var/tmp ：系统重新启动之间保留的临时文件
5.15.1.目的
5.16。 /var/yp ：网络信息服务 (NIS) 数据库文件（可选）
5.16.1.目的
5.1.目的
/var包含变量数据文件。这包括假脱机目录和文件、管理和日志记录数据以及瞬态和临时文件。

某些部分/var在不同系统之间不可共享。例如， /var/log、/var/lock和 /var/run。其他部分可以共享，特别是 /var/mail、/var/cache/man、 /var/cache/fonts和 /var/spool/news。

/var此处指定是为了可以以/usr只读方式挂载。/usr在系统操作期间（而不是安装和软件维护）写入的所有内容都必须位于/var.

如果/var无法创建单独的分区，通常最好/var 从根分区移出并移入该/usr 分区。 （有时这样做是为了减小根分区的大小，或者当根分区中的空间不足时。）但是， /var不得链接到， /usr因为这会使 /usr和的分离变得/var更加困难，并且可能会产生命名冲突。相反，链接 /var到/usr/var.

应用程序通常不得将目录添加到/var.仅当此类目录具有某些系统范围的含义时才应添加，并且应咨询 FHS 邮件列表。

5.2.要求
中需要以下目录或目录的符号链接/var：

目录	描述
cache	应用程序缓存数据
lib	可变状态信息
local	/usr/local 的变量数据
lock	锁定文件
log	日志文件和目录
opt	/opt 的可变数据
run	与正在运行的进程相关的数据
spool	应用程序假脱机数据
tmp	系统重新启动之间保留的临时文件
一些目录是“保留的”，因为它们不能被某些新应用程序任意使用，因为它们会与历史和/或本地实践相冲突。他们是：

    /var/备份
    /var/计划任务
    /var/消息
    /var/保留
5.3.具体选项
/var如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
account	处理记帐日志（可选）
crash	系统故障转储（可选）
games	可变游戏数据（可选）
mail	用户邮箱文件（可选）
yp	网络信息服务 (NIS) 数据库文件（可选）
5.4. /var/account ：处理记帐日志（可选）
5.4.1.目的
该目录保存当前活动进程记帐日志和复合进程使用数据（如lastcomm和 sa在某些类UNIX 系统中使用的数据）。

5.5. /var/cache ：应用程序缓存数据
5.5.1.目的
/var/cache适用于应用程序的缓存数据。此类数据是由于耗时的 I/O 或计算而在本地生成的。应用程序必须能够重新生成或恢复数据。与 不同的是 /var/spool，可以删除缓存文件而不会丢失数据。在调用应用程序和重新启动系统之间，数据必须保持有效。

位于下面的文件/var/cache可能会以应用程序特定的方式过期，或者由系统管理员过期，或者两者兼而有之。应用程序必须始终能够从手动删除这些文件中恢复（通常是由于磁盘空间不足）。对缓存目录的数据格式没有其他要求。

基本原理
缓存数据的单独目录的存在允许系统管理员设置与 中其他目录不同的磁盘和备份策略/var。

5.5.2.具体选项
目录	描述
fonts	本地生成的字体（可选）
man	本地格式的手册页（可选）
www	WWW 代理或缓存数据（可选）
<package>	包特定的缓存数据（可选）
5.5.3. /var/cache/fonts ：本地生成的字体（可选）
5.5.3.1.目的
该目录/var/cache/fonts应用于存储任何动态创建的字体。特别是，所有由mktexpk自动生成的字体必须位于/var/cache/fonts. [38]

5.5.3.2.具体选项
其他动态创建的字体也可以放置在该树中适当命名的 /var/cache/fonts.

5.5.4. /var/cache/man ：本地格式的手册页（可选）
5.5.4.1.目的
此目录为提供只读/usr分区但希望允许缓存本地格式的手册页的站点提供标准位置。以可写方式安装的站点/usr（例如，单用户安装）可以选择不使用 /var/cache/man，并且可以将格式化的手册页直接写入 cat<section>目录中/usr/share/man。我们建议大多数网站使用以下选项之一：

将所有手册页与未格式化的版本一起预格式化。

不允许缓存格式化的手册页，并且要求每次打开手册页时都进行格式化。

允许本地缓存/var/cache/man.

的结构/var/cache/man需要反映多个手册页层次结构的事实和多语言支持的可能性。

给定通常出现在 中的未格式化手册页 <path>/man/<locale>/man<section>，放置格式化手册页的目录是 /var/cache/man/<catpath>/<locale>/cat<section>，其中<catpath>是 <path>通过删除任何前导 usr和/或尾随share 路径名组件而派生的。 （请注意，该 <locale>组件可能会丢失。） [39]

写入的手册页/var/cache/man最终可能会转移到源层次结构中适当的预格式化目录man或过期；man如果一段时间内未访问源层次结构中类似格式的手册页，则它们可能会过期。

如果预格式化的手册页随只读介质（例如 CD-ROM）上的系统一起提供，则它们必须安装在源层次 man结构中（例如/usr/share/man/cat<section>）。 /var/cache/man保留作为格式化手册页的可写缓存。

基本原理
本标准的 1.2 版专门 /var/catman为此层次结构指定。该路径已移至下方，/var/cache以更好地反映格式化手册页的动态特性。目录名称已更改为man允许增强层次结构以包含除“cat”之外的后处理格式，例如 PostScript、HTML 或 DVI。

5.6. /var/crash ：系统故障转储（可选）
5.6.1.目的
该目录保存系统故障转储。截至本标准发布之日，Linux 下不支持系统故障转储，但可能符合 FHS 的其他系统可能支持。

5.7. /var/games ：可变游戏数据（可选）
5.7.1.目的
与游戏相关的任何可变数据/usr 都应放置在此处。 /var/games应保存先前在 中找到的变量数据/usr；静态数据，例如帮助文本、关卡描述等，必须保留在其他地方，例如 /usr/share/games.

基本原理
/var/games已被赋予了自己的层次结构，而不是 /var/lib像本标准的 1.2 版中那样将其保留在下面。这种分离允许对备份策略、权限和磁盘使用进行本地控制，并允许主机间共享并减少 /var/lib.此外， /var/games这是 BSD 传统上使用的路径。

5.8. /var/lib : 变量状态信息
5.8.1.目的
该层次结构保存与应用程序或系统相关的状态信息。状态信息是程序在运行时修改的数据，并且属于一台特定主机。用户永远不需要修改文件来/var/lib配置包的操作，并且用于存储数据的特定文件层次结构不得向普通用户公开。 [40]

状态信息通常用于在调用之间以及同一应用程序的不同实例之间保留应用程序（或一组相互关联的应用程序）的条件。状态信息通常在重新启动后应保持有效，不应是日志输出，也不应是假脱机数据。

一个应用程序（或一组相互关联的应用程序）必须使用 的子目录来/var/lib存储其数据。有一个必需的子目录 ， /var/lib/misc它适用于不需要子目录的状态文件；仅当相关应用程序包含在发行版中时，才应存在其他子目录。 [41]

/var/lib/<name>是所有分发包装支持必须使用的位置。当然，不同的发行版可能使用不同的名称。

5.8.2.要求
中需要以下目录或目录的符号链接/var/lib：

目录	描述
misc	各种状态数据
5.8.3.具体选项
/var/lib如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
<编辑>	编辑备份文件和状态（可选）
<pkg工具>	打包支持文件（可选）
<包装>	包和子系统的状态数据（可选）
color	颜色管理信息（可选）
硬件时钟	hwclock 的状态目录（可选）
西德米	X 显示管理器变量数据（可选）
5.8.4. /var/lib/<editor> ：编辑器备份文件和状态（可选）
5.8.4.1.目的
这些目录包含由编辑器（例如， elvis、 jove、nvi ）意外终止生成的已保存文件。

其他编辑器可能不需要崩溃恢复文件的目录，但可能需要一个明确定义的位置来在编辑器运行时存储其他信息。此信息应存储在 下的子目录中/var/lib（例如，GNU Emacs 会将锁定文件放置在 中 /var/lib/emacs/lock）。

未来的编辑者可能需要除崩溃恢复文件和锁定文件之外的其他状态信息 - 该信息也应放置在 /var/lib/<editor>.

基本原理
以前的 Linux 版本以及所有商业供应商都使用 /var/preservevi 或其克隆版本。但是，每个编辑器都对这些崩溃恢复文件使用自己的格式，因此每个编辑器都需要一个单独的目录。

编辑器特定的锁定文件通常与存储在 中的设备或资源锁定文件有很大不同 /var/lock，因此存储在 /var/lib.

5.8.5。 /var/lib/color ：颜色管理信息（可选）
5.8.5.1.目的
此目录是动态安装的 ICC 色彩管理文件的主目录。该目录应使用与目录相同的规则进行布局/usr/share/color 。

5.8.6。 /var/lib/hwclock ：hwclock 的状态目录（可选）
5.8.6.1.目的
该目录包含文件 /var/lib/hwclock/adjtime.

基本原理
在 FHS 2.1 中，该文件是/etc/adjtime，但随着hwclock更新它，这显然是不正确的。

5.8.7. /var/lib/misc ：杂项变量数据
5.8.7.1.目的
该目录包含未放置在 中的子目录中的变量数据/var/lib。应尝试在此目录中使用相对唯一的名称以避免命名空间冲突。 [42]

5.9. /var/lock : 锁定文件
5.9.1.目的
锁定文件应存储在 /var/lock目录结构中。

多个应用程序共享的设备和其他资源的锁定文件（例如最初在 或 中找到的串行设备锁定文件/usr/spool/locks） /usr/spool/uucp现在必须存储在 中 /var/lock。必须使用的命名约定是“LCK..”，后跟设备的基本名称。例如，要锁定 /dev/ttyS0，将创建文件“LCK..ttyS0”。 [43]

此类锁定文件内容所使用的格式必须是 HDB UUCP 锁定文件格式。 HDB 格式将进程标识符 (PID) 存储为十字节 ASCII 十进制数，并带有尾随换行符。例如，如果进程 1230 持有一个锁定文件，则它将包含十一个字符：空格、空格、空格、空格、空格、空格、一、二、三、零和换行符。

5.10. /var/log ：日志文件和目录
5.10.1.目的
该目录包含各种日志文件。大多数日志必须写入此目录或适当的子目录。

5.10.2.具体选项
/var/log如果安装了相应的子系统，则以下文件或文件的符号链接必须位于 中：

文件	描述
lastlog	每个用户最后一次登录的记录
messages	来自syslogd 的系统消息
wtmp	所有登录和注销的记录
5.11. /var/mail ：用户邮箱文件（可选）
5.11.1.目的
邮件假脱机必须可通过访问， /var/mail并且邮件假脱机文件必须采用以下形式<username>。 [44]

此位置中的用户邮箱文件必须以标准 UNIX 邮箱格式存储。

基本原理
该目录的逻辑位置已更改， /var/spool/mail以便使 FHS 与几乎每个 UNIX 发行版保持一致。此更改对于互操作性非常重要，因为单个文件/var/mail通常在多个主机和多个 UNIX 发行版之间共享（尽管存在 NFS 锁定问题）。

需要注意的是，不需要将邮件线轴物理移动到此位置。但是，必须更改程序和头文件才能使用 /var/mail.

5.12. /var/opt ：/opt 的变量数据
5.12.1.目的
中的软件包的可变数据/opt必须安装在 中/var/opt/<subdir>，其中 是存储附加软件包的静态数据 <subdir>的子树的名称 ，除非被 中的另一个文件取代。的内部安排没有强加任何结构。/opt/etc/var/opt/<subdir>

基本原理
请参阅 的理由/opt。

5.13。 /var/run ：运行时变量数据
5.13.1.目的
该目录曾经用于存放描述系统自启动以来的系统信息数据。这些功能已移至/run；该目录的存在是为了确保与使用本规范旧版本的系统和软件的兼容性。

5.13.2.要求
一般来说， 的要求/run也适用于/var/run。/var/run作为 的符号链接 实现是有效的 /run。

该utmp文件位于此目录中，用于存储当前正在使用系统的用户的信息。

程序不应直接访问/var/run 和/run，除非访问 /var/run/utmp. [45]

5.14。 /var/spool ：应用程序假脱机数据
5.14.1.目的
/var/spool包含等待某种后续处理的数据。输入的数据 /var/spool代表将来要完成的工作（由程序、用户或管理员）；通常数据在处理后会被删除。 [46]

5.14.2.具体选项
/var/spool如果安装了相应的子系统，则以下目录或目录的符号链接必须位于 中：

目录	描述
lpd	打印机假脱机目录（可选）
mqueue	发送邮件队列（可选）
news	新闻假脱机目录（可选）
rwho	Rwhod 文件（可选）
uucp	UUCP 的假脱机目录（可选）
5.14.3。 /var/spool/lpd ：行式打印机守护进程打印队列（可选）
5.14.3.1.目的
lpd , ,的锁定文件lpd.lock必须放置在 /var/spool/lpd.建议将每台打印机的锁定文件放置在该特定打印机的假脱机目录中并命名为lock.

5.14.3.2.具体选项
目录	描述
printer	特定打印机的线轴（可选）
5.14.4. /var/spool/rwho ：Rwhod 文件（可选）
5.14.4.1.目的
该目录保存本地网络上其他系统的rwhod信息。

基本原理
一些 BSD 版本使用/var/rwho此数据；考虑到它在其他系统上的历史位置/var/spool 及其与“假脱机”数据定义的近似相符，该位置被认为更合适。

5.15。 /var/tmp ：系统重新启动之间保留的临时文件
5.15.1.目的
该/var/tmp目录可供需要在系统重新启动之间保留的临时文件或目录的程序使用。因此，存储在 中的 /var/tmp数据比 中的数据更持久 /tmp。

/var/tmp 系统启动时不得删除位于的文件和目录。尽管 中存储的数据/var/tmp通常以特定于站点的方式删除，但建议删除的频率低于/tmp.

5.16。 /var/yp ：网络信息服务 (NIS) 数据库文件（可选）
5.16.1.目的
网络信息服务 (NIS)（以前称为 Sun 黄页 (YP)）的变量数据必须放置在此目录中。

基本原理
/var/yp是 NIS (YP) 数据的标准目录，几乎专门用于 NIS 文档和系统。 [47]


[38] 该标准当前未包含 TeX 目录结构（描述 TeX 文件和目录布局的文档），但阅读它可能会有用。它位于 ftp://ctan.tug.org/tex/

[39] 例如，/usr/share/man/man1/ls.1被格式化为/var/cache/man/cat1/ls.1、 /usr/X11R6/man/<locale>/man3/XtClass.3x和 /var/cache/man/X11R6/<locale>/cat3/XtClass.3x。

[40] 具有公开文件系统结构的数据应存储在 /srv.

[41] 该标准的此版本与以前的版本之间的一个重要区别是应用程序现在需要使用/var/lib.

[42]该层次结构应包含 /var/db当前 BSD 版本中存储的文件。其中包括 locate.database和 mountdtab，以及内核符号数据库。

[43]然后，任何想要使用的东西都/dev/ttyS0 可以读取锁文件并采取相应的行动（所有锁都 /var/lock应该是世界可读的）。

[44]请注意，这/var/mail可能是到另一个目录的符号链接。

[45]这是为了防止混淆临时文件的位置。一般来说，程序应该使用 /var/run或/run来访问这些文件，而不是同时使用两者。

[46] UUCP 锁定文件必须放置在/var/lock.请参阅上面的部分/var/lock。

[47] NIS 不应与 Sun NIS+ 相混淆，后者使用不同的目录/var/nis.

第 6 章操作系统特定附录
目录

6.1. Linux
6.1.1. / ： 根目录
6.1.2. /bin ：基本用户命令二进制文件（供所有用户使用）
6.1.3. /dev ：设备和特殊文件
6.1.4. /etc ：主机特定的系统配置
6.1.5。 /proc ：内核和进程信息虚拟文件系统
6.1.6。 /sbin ：基本系统二进制文件
6.1.7. /sys ：内核和系统信息虚拟文件系统
6.1.8. /usr/include : C 程序包含的头文件
6.1.9. /usr/src：源代码
6.1.10. /var/spool/cron : cron 和 at 作业
本节提供仅适用于特定操作系统的附加要求和建议。本节中的材料不应与基本标准相冲突。

6.1. Linux
这是Linux操作系统的附件。

6.1.1. / ： 根目录
在 Linux 系统上，如果内核位于 /，我们建议使用名称 vmlinux或vmlinuz，这些名称已在最近的 Linux 内核源代码包中使用。

6.1.2. /bin ：基本用户命令二进制文件（供所有用户使用）
需要将这些附加文件放入的 Linux 系统 /bin：

设置串行

6.1.3. /dev ：设备和特殊文件
下必须存在以下设备 /dev。

/dev/null
写入该设备的所有数据都将被丢弃。从此设备读取数据将返回 EOF 条件。

/dev/zero
该设备是清零数据的来源。写入该设备的所有数据都将被丢弃。从此设备读取将返回与请求一样多的包含零值的字节。

/dev/tty
该设备是进程控制终端的同义词。一旦该设备被打开，所有读写操作都将如同实际控制终端设备被打开一样。

基本原理
以前版本的 FHS 对 /dev.其他设备也可能存在于/dev.设备名称可以作为指向位于/dev 或 的子目录中的其他设备节点的符号链接存在/dev。没有关于主/次数值的要求。

6.1.4. /etc ：主机特定的系统配置
Linux 系统要求将这些附加文件放入 /etc.

lilo.conf

6.1.5。 /proc ：内核和进程信息虚拟文件系统
文件系统proc是处理进程和系统信息的事实上的标准 Linux 方法，而不是/dev/kmem 其他类似的方法。我们强烈鼓励这样做来存储和检索进程信息以及其他内核和内存信息。

6.1.6。 /sbin ：基本系统二进制文件
Linux 系统将与文件系统维护和引导加载程序管理相关的命令放入/sbin.

可选文件/sbin：

静态二进制文件：

LD配置

锡林

同步

当出现问题时，静态ln ( sln ) 和静态同步( ssync ) 非常有用。由于ldconfig 程序（通常位于）的存在并且可以充当升级动态库的指导，sln的主要用途 （在精心策划的升级后修复不正确的符号链接 /lib）不再是主要问题。静态 同步在某些紧急情况下很有用。请注意，这些不一定是标准 ln和sync的静态链接版本，但也可以是。/usr/sbin

ldconfig二进制文件是可选的， /sbin因为站点可以选择在启动时运行 ldconfig，而不是仅在升级共享库时运行。 （目前尚不清楚在每次启动时运行ldconfig是否有利。）即便如此，有些人还是喜欢在以下（太常见）情况下使用ldconfig ：

我刚刚删除了/lib/<file>。

我找不到库的名称，因为ls是动态链接的，我使用的 shell 没有 内置ls ，而且我不知道如何使用“ echo * ”作为替代。

我有一个静态sln，但我不知道如何调用该链接。

各种各样的：

ctrlaltdel

千字节率

为了应对某些键盘重复率过高而无法使用的情况， 某些系统上可能会安装 kbdrate 。/sbin

由于 Ctrl-Alt-Del 组合键在内核中的默认操作是立即硬重启，因此通常建议在以读写模式挂载根文件系统之前禁用该行为。一些初始化套件能够禁用 Ctrl-Alt-Del，但其他初始化套件可能需要 ctrlaltdel程序，该程序可能安装在 /sbin这些系统上。

6.1.7. /sys ：内核和系统信息虚拟文件系统
文件系统sys是公开有关设备、驱动程序和某些内核功能的信息的位置。其底层结构由当前使用的特定 Linux 内核决定，否则未指定。

6.1.8. /usr/include : C 程序包含的头文件
如果安装了 C 或 C++ 编译器，并且仅对于不基于 glibc 的系统，则需要这些符号链接。

    /usr/include/asm -> /usr/src/linux/include/asm-<arch>
    /usr/include/linux -> /usr/src/linux/include/linux
6.1.9. /usr/src：源代码
对于基于 的系统 glibc，该目录没有具体的指导方针。对于基于libc之前版本的 Linux 的系统 glibc，适用以下准则和基本原理：

唯一应放置在特定位置的源代码是 Linux 内核源代码。它位于 /usr/src/linux。

如果安装了 C 或 C++ 编译器，但未安装完整的 Linux 内核源代码，则内核源代码中的包含文件必须位于以下目录中：

    /usr/src/linux/include/asm-<架构>
    /usr/src/linux/include/linux
<arch>是系统架构的名称。

笔记
/usr/src/linux 可能是到内核源代码树的符号链接。

基本原理
重要的是内核包含文件位于 /usr/src/linux而不是位于， /usr/include 这样当系统管理员第一次升级其内核版本时就不会出现问题。

6.1.10. /var/spool/cron : cron 和 at 作业
该目录包含cron和at程序的变量数据 。

